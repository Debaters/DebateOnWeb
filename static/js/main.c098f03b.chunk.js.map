{"version":3,"sources":["Home.js","Debate_Room/SingleReply.js","Debate_Room/BrowserCheck.js","Debate_Room/Debate_Subject.js","Debate_Room/Debate_title.js","Debate_Room/Debate_Room.js","App.js","index.js"],"names":["Frame","styled","div","Card","ButtonWrapper","AddDebateRoomButton","button","Home","props","useState","data","setData","history","useHistory","getData","a","axios","post","query","headers","Accept","response","homeDebates","useEffect","onClickList","push","onClickCreateRoom","variables","title","description","creatorName","then","onClick","map","debaterRoom","index","SingleReply","reply","className","writer","date","content","BrowerCheck","sUsrAg","navigator","userAgent","indexOf","Debate_Subject","debate","console","log","Debate_title","Debate_Room","state","replys","id","addReply","bind","value","document","querySelector","this","setState","length","Date","toISOString","slice","remove_text","getElementById","React","Component","App","to","exact","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c098f03b.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst Home = ({ props }) => {\n  const [data, setData] = useState(\"\");\n  let history = useHistory();\n\n  const getData = async () => {\n    const { data: response } = await axios.post(\n      \"/graphql\",\n      {\n        query: `query gethomeDebates {\n      homeDebates(offset:1, size:5){title creatorName}\n    }`,\n      },\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Api-Key\": \"demoKeyOfApi\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    setData(response.data.homeDebates);\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const onClickList = () => {\n    history.push(\"/routing\");\n  };\n\n  const onClickCreateRoom = async () => {\n    await axios\n      .post(\n        \"/graphql\",\n        {\n          query: `mutation createDebate($title:String!, $description:String!, $creatorName:String!) {\n          createDebate(title:$title, description:$description, creatorName:$creatorName)\n        }`,\n          variables: {\n            title: \"제목이라우\",\n            description: \"설명해보라우\",\n            creatorName: \"아이디라우\",\n          },\n        },\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Api-Key\": \"demoKeyOfApi\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n      .then(() => getData());\n  };\n  return (\n    <Frame>\n      <ButtonWrapper>\n        <AddDebateRoomButton onClick={onClickCreateRoom}>\n          추가하기\n        </AddDebateRoomButton>\n      </ButtonWrapper>\n      {data &&\n        data.map((debaterRoom, index) => (\n          <Card key={index} onClick={onClickList}>\n            <h3>{debaterRoom.title}</h3>\n            <p>{debaterRoom.creatorName}</p>\n          </Card>\n        ))}\n    </Frame>\n  );\n};\n\nconst Frame = styled.div`\n  width: 80vw;\n`;\n\nconst Card = styled.div`\n  height: 100px;\n  min-width: 300px;\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px,\n    rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px,\n    rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n  margin: 20px 0px 15px;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  cursor: pointer;\n`;\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  height: 50px;\n  margin: 5px;\n`;\nconst AddDebateRoomButton = styled.button``;\nexport default Home;\n","import React from 'react';\nimport './Debate_Room.css'\n\nexport default function SingleReply ({reply}){\n    return(\n        <div className='reply' className='container'>\n            <div className='writer'>{reply.writer}</div>\n            <div className='date'>{reply.date}</div>\n            <div className='content'>{reply.content}</div>\n        </div>\n    )\n}\n","import React from 'react';\n\nfunction BrowerCheck(props) {\n    var sBrowser, sUsrAg = navigator.userAgent;\n\n    // The order matters here, and this may report false positives for unlisted browsers.\n\n    if (sUsrAg.indexOf(\"Firefox\") > -1) {\n        sBrowser = \"Mozilla Firefox\";\n        // \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:61.0) Gecko/20100101 Firefox/61.0\"\n    } else if (sUsrAg.indexOf(\"SamsungBrowser\") > -1) {\n        sBrowser = \"Samsung Internet\";\n        // \"Mozilla/5.0 (Linux; Android 9; SAMSUNG SM-G955F Build/PPR1.180610.011) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/9.4 Chrome/67.0.3396.87 Mobile Safari/537.36\n    } else if (sUsrAg.indexOf(\"Opera\") > -1 || sUsrAg.indexOf(\"OPR\") > -1) {\n        sBrowser = \"Opera\";\n        // \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 OPR/57.0.3098.106\"\n    } else if (sUsrAg.indexOf(\"Trident\") > -1) {\n        sBrowser = \"Microsoft Internet Explorer\";\n        // \"Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; .NET4.0C; .NET4.0E; Zoom 3.6.0; wbx 1.0.0; rv:11.0) like Gecko\"\n    } else if (sUsrAg.indexOf(\"Edge\") > -1) {\n        sBrowser = \"Microsoft Edge\";\n        // \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36 Edge/16.16299\"\n    } else if (sUsrAg.indexOf(\"Chrome\") > -1) {\n        sBrowser = \"Google Chrome or Chromium\";\n        // \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.181 Chrome/66.0.3359.181 Safari/537.36\"\n    } else if (sUsrAg.indexOf(\"Safari\") > -1) {\n        sBrowser = \"Apple Safari\";\n        // \"Mozilla/5.0 (iPhone; CPU iPhone OS 11_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/11.0 Mobile/15E148 Safari/604.1 980x1306\"\n    } else {\n        sBrowser = \"unknown\";\n    }\n\n    return (\n        sBrowser\n    );\n}\n\nexport default BrowerCheck;","import React, {Fragment, useEffect, useState} from 'react';\nimport axios from 'axios';\n\nconst Debate_Subject = ()=>{\n    const [data, setData] = useState(null);\n\n    \n    useEffect( () => {\n        const getData = async () =>{\n            const {\n                data: {data}\n            } = await axios.post(\"/graphql\",\n                        {\n                            query: `{debate(id:\"1\"){description creatorName}}`\n                        },\n                        {\n                            headers: {\n                            \"Accept\": \"application/json\",\n                            \"Api-Key\": \"demoKeyOfApi\",\n                            \"Content-Type\": \"application/json\"\n                            }\n                        }\n            );\n            setData(data.debate);\n            console.log(data.debate);\n        }\n\n        getData();\n    }, []);\n\n    return (\n        <Fragment>\n            <div>\n                {data && \n                    <div>\n                        creator : {data.creatorName} <br/>\n                        subject : {data.description}\n                    </div>\n                }\n            </div>\n        </Fragment>\n    );\n}\n\nexport default Debate_Subject;","import React, {Fragment, useEffect, useState} from 'react';\nimport axios from 'axios';\n\nconst Debate_title = ()=>{\n    const [data, setData] = useState(null);\n\n    \n    useEffect( () => {\n        const getData = async () =>{\n            const {\n                data: {data}\n            } = await axios.post(\"/graphql\",\n                        {\n                            // id 부분 변수로 변경 필요 $id! 쓰면 되는걸로 알고있음\n                            query: `{debate(id:\"1\"){title}}`\n                        },\n                        {\n                            headers: {\n                            \"Accept\": \"application/json\",\n                            \"Api-Key\": \"demoKeyOfApi\",\n                            \"Content-Type\": \"application/json\"\n                            }\n                        }\n            );\n            setData(data.debate);\n            console.log(data.debate);\n        }\n\n        getData();\n    }, []);\n\n    return (\n        <Fragment>\n            <div>\n                {data && \n                    <div>\n                        <h1>{data.title}</h1>\n                    </div>\n                }\n            </div>\n        </Fragment>\n    );\n}\n\nexport default Debate_title;","import React from 'react';\nimport SingleReply from './SingleReply';\nimport BrowerCheck from './BrowserCheck';\nimport Debate_Subject from './Debate_Subject';\nimport Debate_title from './Debate_title';\n\nclass Debate_Room extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            replys : [\n                {\n                    id : 1,\n                    writer : \"test\",\n                    date : \"2020-10-10\",\n                    content : \"리액트 처음입니다.\"\n                },\n                {\n                    id : 2,\n                    writer : \"test2\",\n                    date : \"2021-08-19\",\n                    content : \"리액트 처음이라고\"\n                }\n            ]\n        }\n        //지금 당장은 바로 내용이 갱신되도록 한다. 추후 DB에 값을 저장하면서 갱신을 동시에 하도록 하면 될듯.\n        this.addReply = this.addReply.bind(this);\n    }\n\n    addReply(){\n        let value = document.querySelector('#new-reply-content').value;\n        this.setState({replys: [...this.state.replys, {\n            id : this.state.replys.length + 1,\n            writer: <BrowerCheck />,\n            date : new Date().toISOString().slice(0, 10),\n            content : value\n        }]})\n        this.remove_text();\n    }\n\n    render(){\n        return (\n            <div id=\"root\">\n                <div>\n                    <Debate_title />\n                    <Debate_Subject />\n                    <div id=\"replys\">\n                        {\n                            this.state.replys.map(replys => {\n                                return <SingleReply key={replys.id} reply={replys}/>\n                            })\n                        }\n                    </div>\n                    <div id=\"writing-area\">\n                        <textarea id=\"new-reply-content\"></textarea>\n                        <button id=\"submit-new-reply\" onClick={this.addReply}>입력</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    remove_text(){\n        var clear_area = document.getElementById('new-reply-content');\n        clear_area.value = ' ';\n    }\n}\n\nexport default Debate_Room;","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport \"./App.css\";\nimport \"./Debate_Room/Debate_Room\";\nimport Debate_Room from \"./Debate_Room/Debate_Room\";\n\nfunction App() {\n  return (\n    <Router>\n      <header className='header'>\n        <div>\n          <Link to='/'>Debaters world</Link>\n        </div>\n      </header>\n      <div className='main'>\n        <Switch>\n          <Route exact path='/'>\n            <Home />\n          </Route>\n          <Route exact path='/routing'>\n            <Debate_Room />\n          </Route>\n        </Switch>\n      </div>\n      <footer className='footer'></footer>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}