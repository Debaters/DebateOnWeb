{"version":3,"sources":["Home/ModalCreateRoom.js","Home.js","Debate_Room/SingleReply.js","Debate_Room/BrowserCheck.js","Debate_Room/Debate_Subject.js","Debate_Room/Debate_title.js","Debate_Room/Debate_Room.js","App.js","index.js"],"names":["ModalCreateRoom","isOpen","onCloseEvent","useState","title","description","data","setData","handleValue","e","target","name","value","console","log","onClickCreateRoom","a","axios","post","query","variables","creatorName","headers","Accept","ModalLayer","ModalContent","onClick","type","placeholder","onChange","required","styled","div","Frame","Card","ButtonWrapper","AddDebateRoomButton","button","Home","props","modalIsOpen","setModalIsOpen","history","useHistory","getData","response","homeDebates","useEffect","onClickList","push","map","debaterRoom","index","SingleReply","reply","className","writer","date","content","BrowerCheck","sUsrAg","navigator","userAgent","indexOf","Debate_Subject","debate","Debate_title","Debate_Room","state","replys","id","addReply","bind","document","querySelector","this","setState","length","Date","toISOString","slice","remove_text","getElementById","React","Component","App","exact","to","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.30016009.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport axios from \"axios\";\n\nconst ModalCreateRoom = ({ isOpen, onCloseEvent }) => {\n  const [data, setData] = useState({ title: \"\", description: \"\" });\n  // 아래 input value으로 넣어주기 위해\n  const { title, description } = data;\n  // console.log(isOpen);\n  function handleValue(e) {\n    const { name, value } = e.target;\n    console.log(e.target);\n    setData({\n      ...data,\n      [name]: value,\n    });\n  }\n  const onClickCreateRoom = async (title, description) => {\n    console.log(\"클릭 누름\");\n    await axios.post(\n      \"/graphql\",\n      {\n        query: `mutation createDebate($title:String!, $description:String!, $creatorName:String!) {\n          createDebate(title:$title, description:$description, creatorName:$creatorName)\n        }`,\n        variables: {\n          title: title,\n          description: description,\n          creatorName: \"아이디라우\",\n        },\n      },\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Api-Key\": \"demoKeyOfApi\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n  };\n\n  return (\n    <>\n      {isOpen ? (\n        <ModalLayer>\n          <ModalContent>\n            <button onClick={onCloseEvent}>창 닫기</button>\n            <div>\n              제목 :\n              <input\n                type='text'\n                name='title'\n                placeholder='제목'\n                value={title}\n                onChange={handleValue}\n                required\n              />\n              설명 :\n              <input\n                type='text'\n                name='description'\n                placeholder='설명'\n                value={description}\n                onChange={handleValue}\n                required\n              />\n              <button\n                onClick={() => onClickCreateRoom(data.title, data.description)}\n              >\n                방 만들기\n              </button>\n            </div>\n          </ModalContent>\n        </ModalLayer>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default ModalCreateRoom;\n\nconst ModalLayer = styled.div`\n  display: none; // hidden by default\n  position: fixed;\n  top: 0px;\n  bottom: 0px;\n  left: 0px;\n  right: 0px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(0, 0, 0, 0.5);\n  overflow: auto;\n`;\n\nconst ModalContent = styled.div`\n  background-color: white;\n  width: 70%;\n  border: 1px solid gray;\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px,\n    rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px,\n    rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport ModalCreateRoom from \"./Home/ModalCreateRoom\";\n\nconst Home = ({ props }) => {\n  const [data, setData] = useState(\"\");\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  let history = useHistory();\n\n  const getData = async () => {\n    const { data: response } = await axios.post(\n      \"/graphql\",\n      {\n        query: `query gethomeDebates {\n      homeDebates(offset:1, size:5){title creatorName}\n    }`,\n      },\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Api-Key\": \"demoKeyOfApi\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    setData(response.data.homeDebates);\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const onClickList = () => {\n    history.push(\"/routing\");\n  };\n  const onClickModal = () => {\n    console.log(\"모달 열기\");\n    setModalIsOpen(true);\n  };\n\n  const onCloseModal = () => {\n    console.log(\"모달 닫기\");\n    setModalIsOpen(false);\n  };\n\n  return (\n    <Frame>\n      <ButtonWrapper>\n        <AddDebateRoomButton onClick={onClickModal}>\n          방만들기\n        </AddDebateRoomButton>\n      </ButtonWrapper>\n      {data &&\n        data.map((debaterRoom, index) => (\n          <Card key={index} onClick={onClickList}>\n            <h3>{debaterRoom.title}</h3>\n            <p>{debaterRoom.creatorName}</p>\n          </Card>\n        ))}\n      <ModalCreateRoom isOpen={modalIsOpen} onCloseEvent={onCloseModal} />\n    </Frame>\n  );\n};\n\nconst Frame = styled.div`\n  width: 80vw;\n`;\n\nconst Card = styled.div`\n  height: 100px;\n  min-width: 300px;\n  border-radius: 5px;\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 54px 55px,\n    rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px,\n    rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;\n  margin: 20px 0px 15px;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  cursor: pointer;\n`;\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  height: 50px;\n  margin: 5px;\n`;\nconst AddDebateRoomButton = styled.button``;\nexport default Home;\n","import React from 'react';\nimport './Debate_Room.css'\n\nexport default function SingleReply ({reply}){\n    return(\n        <div className='reply' className='container'>\n            <div className='writer'>{reply.writer}</div>\n            <div className='date'>{reply.date}</div>\n            <div className='content'>{reply.content}</div>\n        </div>\n    )\n}\n","import React from 'react';\n\nfunction BrowerCheck(props) {\n    var sBrowser, sUsrAg = navigator.userAgent;\n\n    // The order matters here, and this may report false positives for unlisted browsers.\n\n    if (sUsrAg.indexOf(\"Firefox\") > -1) {\n        sBrowser = \"Mozilla Firefox\";\n        // \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:61.0) Gecko/20100101 Firefox/61.0\"\n    } else if (sUsrAg.indexOf(\"SamsungBrowser\") > -1) {\n        sBrowser = \"Samsung Internet\";\n        // \"Mozilla/5.0 (Linux; Android 9; SAMSUNG SM-G955F Build/PPR1.180610.011) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/9.4 Chrome/67.0.3396.87 Mobile Safari/537.36\n    } else if (sUsrAg.indexOf(\"Opera\") > -1 || sUsrAg.indexOf(\"OPR\") > -1) {\n        sBrowser = \"Opera\";\n        // \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 OPR/57.0.3098.106\"\n    } else if (sUsrAg.indexOf(\"Trident\") > -1) {\n        sBrowser = \"Microsoft Internet Explorer\";\n        // \"Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; .NET4.0C; .NET4.0E; Zoom 3.6.0; wbx 1.0.0; rv:11.0) like Gecko\"\n    } else if (sUsrAg.indexOf(\"Edge\") > -1) {\n        sBrowser = \"Microsoft Edge\";\n        // \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36 Edge/16.16299\"\n    } else if (sUsrAg.indexOf(\"Chrome\") > -1) {\n        sBrowser = \"Google Chrome or Chromium\";\n        // \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.181 Chrome/66.0.3359.181 Safari/537.36\"\n    } else if (sUsrAg.indexOf(\"Safari\") > -1) {\n        sBrowser = \"Apple Safari\";\n        // \"Mozilla/5.0 (iPhone; CPU iPhone OS 11_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/11.0 Mobile/15E148 Safari/604.1 980x1306\"\n    } else {\n        sBrowser = \"unknown\";\n    }\n\n    return (\n        sBrowser\n    );\n}\n\nexport default BrowerCheck;","import React, {Fragment, useEffect, useState} from 'react';\nimport axios from 'axios';\n\nconst Debate_Subject = ()=>{\n    const [data, setData] = useState(null);\n\n    \n    useEffect( () => {\n        const getData = async () =>{\n            const {\n                data: {data}\n            } = await axios.post(\"/graphql\",\n                        {\n                            query: `{debate(id:\"1\"){description creatorName}}`\n                        },\n                        {\n                            headers: {\n                            \"Accept\": \"application/json\",\n                            \"Api-Key\": \"demoKeyOfApi\",\n                            \"Content-Type\": \"application/json\"\n                            }\n                        }\n            );\n            setData(data.debate);\n            console.log(data.debate);\n        }\n\n        getData();\n    }, []);\n\n    return (\n        <Fragment>\n            <div>\n                {data && \n                    <div>\n                        creator : {data.creatorName} <br/>\n                        subject : {data.description}\n                    </div>\n                }\n            </div>\n        </Fragment>\n    );\n}\n\nexport default Debate_Subject;","import React, {Fragment, useEffect, useState} from 'react';\nimport axios from 'axios';\n\nconst Debate_title = ()=>{\n    const [data, setData] = useState(null);\n\n    \n    useEffect( () => {\n        const getData = async () =>{\n            const {\n                data: {data}\n            } = await axios.post(\"/graphql\",\n                        {\n                            // id 부분 변수로 변경 필요 $id! 쓰면 되는걸로 알고있음\n                            query: `{debate(id:\"1\"){title}}`\n                        },\n                        {\n                            headers: {\n                            \"Accept\": \"application/json\",\n                            \"Api-Key\": \"demoKeyOfApi\",\n                            \"Content-Type\": \"application/json\"\n                            }\n                        }\n            );\n            setData(data.debate);\n            console.log(data.debate);\n        }\n\n        getData();\n    }, []);\n\n    return (\n        <Fragment>\n            <div>\n                {data && \n                    <div>\n                        <h1>{data.title}</h1>\n                    </div>\n                }\n            </div>\n        </Fragment>\n    );\n}\n\nexport default Debate_title;","import React from 'react';\nimport SingleReply from './SingleReply';\nimport BrowerCheck from './BrowserCheck';\nimport Debate_Subject from './Debate_Subject';\nimport Debate_title from './Debate_title';\n\nclass Debate_Room extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            replys : [\n                {\n                    id : 1,\n                    writer : \"test\",\n                    date : \"2020-10-10\",\n                    content : \"리액트 처음입니다.\"\n                },\n                {\n                    id : 2,\n                    writer : \"test2\",\n                    date : \"2021-08-19\",\n                    content : \"리액트 처음이라고\"\n                }\n            ]\n        }\n        //지금 당장은 바로 내용이 갱신되도록 한다. 추후 DB에 값을 저장하면서 갱신을 동시에 하도록 하면 될듯.\n        this.addReply = this.addReply.bind(this);\n    }\n\n    addReply(){\n        let value = document.querySelector('#new-reply-content').value;\n        this.setState({replys: [...this.state.replys, {\n            id : this.state.replys.length + 1,\n            writer: <BrowerCheck />,\n            date : new Date().toISOString().slice(0, 10),\n            content : value\n        }]})\n        this.remove_text();\n    }\n\n    render(){\n        return (\n            <div id=\"root\">\n                <div>\n                    <Debate_title />\n                    <Debate_Subject />\n                    <div id=\"replys\">\n                        {\n                            this.state.replys.map(replys => {\n                                return <SingleReply key={replys.id} reply={replys}/>\n                            })\n                        }\n                    </div>\n                    <div id=\"writing-area\">\n                        <textarea id=\"new-reply-content\"></textarea>\n                        <button id=\"submit-new-reply\" onClick={this.addReply}>입력</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    remove_text(){\n        var clear_area = document.getElementById('new-reply-content');\n        clear_area.value = ' ';\n    }\n}\n\nexport default Debate_Room;","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport \"./App.css\";\nimport \"./Debate_Room/Debate_Room\";\nimport Debate_Room from \"./Debate_Room/Debate_Room\";\n\nfunction App() {\n  return (\n    <Router>\n      <header className='header'>\n        <div>\n          <Link exact='true' to='/DebateOnWeb/'>\n            Debaters world\n          </Link>\n        </div>\n      </header>\n      <div className='main'>\n        <Switch>\n          <Route exact path='/DebateOnWeb/'>\n            <Home />\n          </Route>\n          <Route exact path='/routing'>\n            <Debate_Room />\n          </Route>\n        </Switch>\n      </div>\n      <footer className='footer'></footer>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}